# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Nodejs.gitlab-ci.yml

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest


before_script:
  - corepack enable
  - corepack prepare --activate
  - pnpm config set store-dir .pnpm-store
  - pnpm install

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: https://docs.gitlab.com/ee/ci/services/index.html
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
cache:
  key:
    files:
      - pnpm-lock.yaml
  paths:
    - node_modules/
    - .pnpm-store
    - .turbo

test_async:
  script:
    - pnpm install
    - pnpm setup:deps
    - pnpm test -- -- --passWithNoTests

lint:
  script:
    - pnpm install
    - pnpm lint
  
typecheck:
  script:
    - pnpm install
    - pnpm typecheck

pages:
  stage: deploy
  script:
    - pnpm install
    - pnpm turbo build --filter=web
    # - cp apps/web/dist/index.html apps/web/build/404.html
    - mv apps/web/dist public
  
  artifacts:
    paths:
      - public
  only:
    - main

# test_db:
#   script:
#     - npm install
#     - node ./specs/start.js ./specs/db-postgres.spec.js

# deploy:
#   stage: deploy
#   script: echo "Define your deployment script!"
#   environment: production
